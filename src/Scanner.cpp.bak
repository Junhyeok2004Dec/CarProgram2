#include <ros/ros.h>
#include <sensor_msgs/LaserScan.h>
#include <std_msgs/Float32.h>

ros::Publisher distance_pub;
ros::Publisher angle_pub;

void scanCallback(const sensor_msgs::LaserScan::ConstPtr& scan)
{
    // 초기화
    float max_distance = scan->range_min;
    float max_angle = scan->angle_min;

    // 최대 거리와 해당 각도 계산
    for (size_t i = 0; i < scan->ranges.size(); ++i)
    {
        float distance = scan->ranges[i];
        if (distance >= scan->range_min && distance <= scan->range_max)
        {
            if (distance > max_distance)
            {
                max_distance = distance;
                max_angle = scan->angle_min + i * scan->angle_increment;
            }
        }
    }

    // 거리와 각도를 퍼블리시
    std_msgs::Float32 distance_msg;
    distance_msg.data = max_distance;
    distance_pub.publish(distance_msg);

    std_msgs::Float32 angle_msg;
    angle_msg.data = max_angle;
    angle_pub.publish(angle_msg);
}

int main(int argc, char** argv)
{
    ros::init(argc, argv, "scan_data_publisher");
    ros::NodeHandle nh;

    // 퍼블리셔 설정
    distance_pub = nh.advertise<std_msgs::Float32>("scan_demo_distance", 1);
    angle_pub = nh.advertise<std_msgs::Float32>("scan_demo_angle", 1);

    // 구독자 설정
    ros::Subscriber scan_sub = nh.subscribe("scan", 10, scanCallback);

    ros::spin();
    return 0;
}